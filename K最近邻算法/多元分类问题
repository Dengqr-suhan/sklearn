from sklearn.datasets import make_blobs              #数据集生成器
from sklearn.neighbors import KNeighborsClassifier   #KNN分类器
import matplotlib.pyplot as plt                      #画图工具
from sklearn.model_selection import train_test_split #导入数据拆分工具

data2 = make_blobs(n_samples=500, centers=5, random_state=8)
X2,y2 = data2

plt.scatter(X2[:,0],X2[:,1],c=y2, cmap=plt.cm.spring,edgecolors='k')
plt.show()

import numpy as np
clf = KNeighborsClassifier()
clf.fit(X2,y2)
x_min,x_max = X2[:,0].min() - 1,X2[:,0].max()+1
y2_min,y2_max = X2[:,1].min() - 1,X2[:,1].max()+1
xx,yy = np.meshgrid(np.arange(x_min,x_max,.02),
                    np.arange(y2_min,y2_max,.02))
Z = clf.predict(np.c_[xx.ravel(),yy.ravel()])
Z = Z.reshape(xx.shape)
plt.pcolormesh(xx,yy,Z,cmap=plt.cm.Spectral)
plt.scatter(X2[:,0],X2[:,1],c=y2,cmap=plt.cm.spring,edgecolors='k')
plt.xlim(xx.min(),xx.max())
plt.ylim(yy.min(),yy.max())
plt.title("Classifier:KNN")

plt.scatter(6.75,4.82, marker="*", c="red", s=200)
plt.show()
per = clf.score(X2,y2)
print(f"模型准确度：{per}")